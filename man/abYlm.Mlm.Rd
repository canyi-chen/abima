% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abYlm.Mlm.R
\name{abYlm.Mlm}
\alias{abYlm.Mlm}
\title{Adaptive bootstrap for mediation analysis}
\usage{
abYlm.Mlm(
  S,
  M,
  Y,
  X,
  intercept = FALSE,
  s = 1,
  s_star = 0,
  B = 199,
  lambda = 2
)
}
\arguments{
\item{S}{a n-by-1 matrix for exposure.}

\item{M}{a n-by-m matrix for mediator, each row corresponding to an observation. The dimension m could be 1 or
larger than 1.}

\item{Y}{a n-by-1 matrix for outcome.}

\item{X}{a n-by-p matrix for confounder.}

\item{intercept}{logical, default at FALSE; if the intercept has been included in the confounder. If the intercept
is included, please put it in the first column of X.}

\item{s}{exposure level, default at 1}

\item{s_star}{another exposure level, default at 0}

\item{B}{the number of bootstrap, default at 199}

\item{lambda}{the constant used in the pretest when conducing adaptive bootstrap, default at 2.}
}
\value{
mediation_effect the estimated mediation effect between s and s_star (conditioning on the covariates_new).

p_value the p value.
}
\description{
\code{ab.mediation} is used for testing no mediation effect via adaptive bootstrap under several (generalized)
linear model.
}
\examples{
\dontrun{
  ## Load libraries
  library(abmed)

  if (require(future.apply)) {
    library(future.apply)
    plan(multisession, workers = 12)
  } else {
    future_replicate <- replicate
  }


  ## Set up parameters
  M.family <- gaussian()
  Y.family <- gaussian()

  simulation <- function(alpha_S = 0, beta_M = 0) {
    data <- generate_all_data(
      n = 200,
      alpha_S = alpha_S,
      beta_M = beta_M,
      M.family = M.family,
      Y.family = Y.family
    )
    S <- data$S
    M <- data$M
    Y <- data$Y
    X <- data$X

    out <- abYlm.Mlm(
      S,
      M,
      Y,
      X,
      lambda = 2,
      B = 199
    )
    out
  }

  set.seed(2)
  simulation(1 / 8, 1 / 8)


  ## Empirical distribution of the p value
  # the number of replication for approximating the distribution of the p value
  Nreps <- 200
  alpha_S <- beta_M <- 0
  output <- future_replicate(Nreps, simulation(0, 0))


  plot(
    seq(0, 1, 0.01),
    quantile(unlist(output[2, ]), probs = seq(0, 1, 0.01)),
    pch = 1,
    cex = 1.2,
    cex.lab = 1.3,
    cex.axis = 1.3,
    ylab = "Sample Quantiles",
    xlab = "Theoretical Quantiles",
    type = "p",
    xlim = c(0, 1),
    ylim = c(0, 1),
    lwd = 1.2
  )
  abline(0, 1, col = "orange")

}



}
\references{
\url{https://academic.oup.com/jrsssb/advance-article/doi/10.1093/jrsssb/qkad129/7420463}
}
